@startuml
skinparam dpi 300
skinparam maxMessageSize 160

actor Client
participant "AdminRoleInterceptor" as Interceptor
participant "AdminSalePointController" as Controller
participant "SalePointService" as Service
participant "ValidSalePointFields" as Validator
participant "SalePointRepository" as Repository
database "Database" as DB

Client -> Interceptor: POST /api/sale-point/admin/add-sale-point
activate Interceptor

Interceptor -> Interceptor: Extract JWT from Header
Interceptor -> Interceptor: Validate Admin Role

alt Invalid Token or Not Admin
    Interceptor --> Client: 403 Forbidden
else Valid Admin Token
    Interceptor -> Controller: preHandle() = true
    deactivate Interceptor

    activate Controller
    Controller -> Controller: use validations annotations for SalePointDtoInput
    Controller -> Service: addSalePoint(SalePointDtoInput)
    activate Service
    Service -> Repository: save(SalePointEntity)
    Repository -> DB: INSERT INTO sale_points
    activate DB
    DB --> Repository: SalePoint Record
    deactivate DB
    Repository --> Service: SalePointEntity
    deactivate Repository
    Service -> Service: Map entity to SalePointDtoOutput
    Service --> Controller: SalePointDtoOutput
    deactivate Service
    Controller -> Controller: new ApiResponse("Sale Point Created Successfully", salePointDtoOutput)
    Controller --> Client: 200 OK + ApiResponse
    deactivate Controller
end

@enduml